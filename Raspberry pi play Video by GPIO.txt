1. Play Video With Python and GPIO
   https://www.hackster.io/ThothLoki/play-video-with-python-and-gpio-a30c7a
   
   a. Create a file "videoplayer.py"
   b. edit the file as:
      import Rpi.GPIO as GPIO
      import sys
      import os from subprocess import Popen
      GPIO.setmode(GPIO.BCM)
      GPIO.setup(17, GPIO.IN, pull_up_down=GPIO.PUD_UP)
      GPIO.setup(18, GPIO.IN, pull_up_down=GPIO.PUD_UP)
      GPIO.setup(24, GPIO.IN, pull_up_down=GPIO.PUD_UP) 
      movie1 = ("/home/pi/Videos/movie1.mp4")
      movie2 = ("/home/pi/Videos/movie2.mp4")
      last_state1 = True
      last_state2 = True
      input_state1 = True
      input_state2 = True
      quit_video = True
      while True:
    	#Read states of inputs
    	input_state1 = GPIO.input(17)
    	input_state2 = GPIO.input(18)
    	quite_video = GPIO.input(24)
    
    	#If GPIO(17) is shorted to ground
    	if input_state1 != last_state1:
    		if (player and not input_state1):
    			os.system('killall omxplayer.bin')
    			omxc = Popen(['omxplayer', '-b', movie1])
    			player = True
    		elif not input_state1:
    			omxc = Popen(['omxplayer', '-b', movie1])
    			player = True
    	
    	#If GPIO(18) is shorted to ground
    	elif input_state2 != last_state2:
    		if (player and not input_state2):
    			os.system('killall omxplayer.bin')
    			omxc = Popen(['omxplayer', '-b', movie2])
    			player = True
    		elif not input_state2:
    			omxc = Popen(['omxplayer', '-b', movie2])
    			player = True
    
    	#If omxplayer is running and GPIO(17) and GPIO(18) are NOT shorted to ground
    	elif (player and input_state1 and input_state2):
    		os.system('killall omxplayer.bin')
    		player = False
    
    	#GPIO(24) to close omxplayer manually - used during debug
    	if quit_video == False:
    		os.system('killall omxplayer.bin')
    		player = False
    
    	#Set last_input states
    	last_state1 = input_state1
    	last_state2 = input_state2 
    
    c. Execute by input : python3 videoplayer.py
       
//--------------------------------------------------------------------------------   
2. omxplayer-player.py    	
   https://github.com/jehutting/omxplayer-player/blob/master/omxplayer-player.py
   http://www.pibeginners.com/playing-media-via-cli-gpio/
   
//---------------------------------------------------------------------------------
3. Nodejs play video
   https://www.npmjs.com/package/node-omxplayer
   https://npm.taobao.org/package/omx-manager#othermethods
   
   a. npm install node-omxplayer
   b. sudo apt-get install omxplayer
   c. edit app.js
      var Omx = require('node-omxplayer');
      var player = Omx('/home/pi/Videos/movie1.mp4', "both", "true");
      
   d. API:
      player.volUp()
      player.volDown()
      player.fastFwd()
      player.rewind()
      player.fwd30()
      player.back30()
      player.quit() 
      player.running
         Boolean giving the playback status, 
         true if the player is still active, 
         false if it has ended or the player has quit.
         
//------------------------------------------------------------------------
4. forever service 
   https://github.com/zapty/forever-service
   
   a. npm install -g forever
   b. npm install -g forever-service  
   c. Usage :
      $ forever-service --help 
   d. Install new service :
      $ forever-service install --help 
      
      for example:
      $ sudo forever-service install test
        this will install local folder app.js
      
   e. Delete service :
      $ forever-service delete --help
   f. List service
      $ sudo forever list
   g. Sart/Stop service
      $ sudo service test start
      $ sudo service test sttop
      $ sudo service test restart
      $ sudo service test status
      
//----------------------------------------------
5. Module omx-manager
   a. $> npm install omx-manager
   b. Usae:
      var OmxManager = require('omx-manager');
      var manager = new OmxManager(); // OmxManager
      var camera = manager.create('video.avi'); // OmxInstance
      camera.play(); // Will start the process to play videos  
   c. Multi File :
      manager.create(['video.avi', 'anothervideo.mp4', 'video.mkv']); 
      
   d. set Omx command
      manager.setOmxCommand('/path/to/my/command');
   
   e. Events :
      camera.on('play', function(video) {});  
      camera.on('pause', function() {});
      camera.on('stop', function() {});
      camera.on('end', function() {}); 
    
   f. 您可以發出以下命令?控制台的?容清除?黑色： 
      /usr/bin/tvservice -p 
      那么你的omxplayer的?西只?在?影之?切?到黑色。 
      
//----------------------------------------------------
6. Display Photo by FEH
   https://pimylifeup.com/raspberry-pi-photo-frame/
   
   a. sudo apt-get install feh
   b. input command :
      DISPLAY=:0.0 XAUTHORITY=/home/pi/.Xauthority /usr/bin/feh -q -p -Z -F -R  60 -Y -D 1.0 /home/pi/Pictures/
   c. run at bootup
      1. sudo nano /etc/rc.local
      2. Add the following before the exit 0 line in this folder.
      3. sleep 10
         bash /home/pi/start-picture-frame.sh &
   d. stop the feh
      sudo pkill feh
   e. HDMI on
      xset -display :0.0 dpms force on
      
//-------------------------------------------------
7. Display Photo by FBI
   http://ofbrooklyn.com/2014/01/2/building-photo-frame-raspberry-pi-motion-detector/


   a. sudo apt-get install fbi
   b. input command :
       sudo fbi -T 2 -noverbose -m 640x480 -a -u -t 2 /home/pi/Pictures/*   

//---------------------------------------------
8. reinsttall nodejs 
   curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
   sudo apt-get install -y nodejs
   npm install -g npm@latest
//-----------------------------------------
8. raspberry pi node install serialport
   1. sudo npm install -g node-gyp
   2. sudo npm install -g node-pre-gyp  
   3. sudo npm install serialport --unsafe-perm       